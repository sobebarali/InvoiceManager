version: 2.1
orbs:
  python: circleci/python@2.1.1

workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: main

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10
      - image: circleci/postgres:13.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python manage.py test
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ./venv

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "YOUR_SSH_KEY_FINGERPRINT"
      - run:
          name: Deploy to EC2
          command: |
            echo "deploying to EC2..."
            ssh -o StrictHostKeyChecking=no ubuntu@${EC2_PUBLIC_IP} "\
              cd ~/invoice-project && \
              git pull origin main && \
              source venv/bin/activate && \
              pip install -r requirements.txt && \
              python manage.py migrate && \
              sudo systemctl restart gunicorn"